/*
The sketch demonstrates how to do use the 128-bit AES CCM Encryption and
Decryption.
*/

/*
 * Copyright (c) 2015 RF Digital Corp. All Rights Reserved.
 *
 * The source code contained in this file and all intellectual property embodied in
 * or covering the source code is the property of RF Digital Corp. or its licensors.
 * Your right to use this source code and intellectual property is non-transferable,
 * non-sub licensable, revocable, and subject to terms and conditions of the
 * SIMBLEE SOFTWARE LICENSE AGREEMENT.
 * http://www.simblee.com/licenses/SimbleeSoftwareLicenseAgreement.txt
 *
 * THE SOURCE CODE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.
 *
 * This heading must NOT be removed from this file.
 */

#include <SimbleeRNG.h>
#include <SimbleeAES.h>

// private encryption key (generated by the SimbleeRNG generate sketch)
uint8_t key[16] = { 0xc2, 0x20, 0x47, 0xeb, 0x3b, 0xd5, 0x22, 0x71, 0x10, 0x45, 0xb5, 0x13, 0x13, 0x33, 0x74, 0x61 };

// private initialization vector (generated by the SimbleeRNG generate sketch)
uint8_t iv[8] = { 0x7a, 0x91, 0x90, 0xfb, 0xaa, 0xc0, 0x27, 0x0c };

// packet counter (CTR mode combines the IV and pktctr into the full 128-bit nonce)
uint64_t pktctr;

// this must be 0 or 1
uint8_t direction = 1;

// NOTE: the nonce should never be used more than once for a given key or the security can be compromised.

uint8_t msg_in[12 + 1] = "Hello World!";
uint8_t encrypted[12 + 1 + 4];
uint8_t msg_out[12 + 1];

void setup() {
  Serial.begin(9600);

  // pick a random pktctr (or use a sequential counter and flash memory to pickup where we left off)
  SimbleeRNG::generate((uint8_t*)&pktctr, sizeof(pktctr));  

  // length includes the end-of-string NULL byte
  // (we don't technically need it, but it makes it easier to display the decrypted string later)
  printf("string (length %d): %s\n", sizeof(msg_in), msg_in);

  uint8_t encrypted_len = SimbleeAES::encrypt(key, iv, pktctr, direction, msg_in, sizeof(msg_in), encrypted);

  printf("encrypted stream (length %d): ", encrypted_len);
  for (int i = 0; i < encrypted_len; i++)
    printf("%x ", encrypted[i]);
  printf("\n");
  
  uint8_t msg_out_len = SimbleeAES::decrypt(key, iv, pktctr, direction, encrypted, encrypted_len, msg_out);
  
  printf("decrypted string (length %d): %s\n", msg_out_len, msg_out);
}

void loop() {
}
