/*
The sketch demonstrates how to do use SimbleeCOM with 128-bit AES CCM Encryption.
*/

/*
 * Copyright (c) 2015 RF Digital Corp. All Rights Reserved.
 *
 * The source code contained in this file and all intellectual property embodied in
 * or covering the source code is the property of RF Digital Corp. or its licensors.
 * Your right to use this source code and intellectual property is non-transferable,
 * non-sub licensable, revocable, and subject to terms and conditions of the
 * SIMBLEE SOFTWARE LICENSE AGREEMENT.
 * http://www.simblee.com/licenses/SimbleeSoftwareLicenseAgreement.txt
 *
 * THE SOURCE CODE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.
 *
 * This heading must NOT be removed from this file.
 */

#include <SimbleeAESCOM.h>

#define  BUTTON  5

// private encryption key (generated by the SimbleeRNG generate sketch)
uint8_t key[16] = { 0xc2, 0x20, 0x47, 0xeb, 0x3b, 0xd5, 0x22, 0x71, 0x10, 0x45, 0xb5, 0x13, 0x13, 0x33, 0x74, 0x61 };

// private initialization vector table
// each row contains an esn, and an initialization vector (generated by the SimbleeRNG generate sketch)
/*
   NOTE: you will need to upate the info below to contain the esn of your Simblee devices, then recompile and upload
   the sketch to each device in order for this example to work properly!
*/
simbleeaescom_t info[] =
{
  { 0x12345678, { 0xd0, 0xaf, 0x28, 0xd9, 0x80, 0x9f, 0x00, 0xe3 } },
  { 0x87654321, { 0xac, 0x83, 0x8a, 0x25, 0x75, 0xb0, 0xb9, 0xd0 } },
  { 0x11223344, { 0x30, 0xa3, 0xc9, 0x34, 0x95, 0x10, 0x99, 0x9d } },
};

// every time button 0 is pressed, we increment this value and send it encrpyted to all the other devices
pktctr_t counter = 0;

void setup() {
  pinMode(BUTTON, INPUT);
  
  Serial.begin(9600);

  printf("device esn: 0x%08x\n", SimbleeAESCOM.getESN());
  
  SimbleeAESCOM.key = key;
  SimbleeAESCOM.info = info;
  SimbleeAESCOM.count = countof(info);
  
  SimbleeAESCOM.begin();
}

void loop() {
  // wait for button press
  //Simblee_pinWake(BUTTON, HIGH);
  // Simblee_ULPDelay(INFINITE);
  
  if (digitalRead(BUTTON) == 1)
  {
    // increment counter
    counter++;
  
    // send it encrypted
    SimbleeAESCOM.send((const char *)&counter, sizeof(counter));
  
    // cheap debounce
    delay(250);
  }
}

void SimbleeAESCOM_onReceive(unsigned int info_index, const char *payload, int len, int rssi)
{
  pktctr_t value = *(pktctr_t*)payload;
  printf("received counter value %d from device %d with rssi %d\n", value, info_index, rssi);
}